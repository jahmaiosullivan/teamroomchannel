@using Teamroom.Web.Views
<div class="modal fade" id="addPicturesModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Upload Pictures</h3>
                <a class="modalClose" data-dismiss="modal" title="close" style="position: absolute;top: 30px;right: 30px;">X</a>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="pull-left" style="margin-right: 10px;">
                            <span class="btn btn-success fileinput-button">
                                <i class="glyphicon glyphicon-plus"></i>
                                <span>Add files...</span>
                                <!-- The file input field used as target for the file upload widget -->
                                <input id="fileupload" type="file" name="files[]" multiple>
                            </span>
                        </div>
                        <div id="progress" class="progress" style="height: 35px;width: 440px;">
                            <div class="progress-bar progress-bar-success"></div>
                        </div>
                    </div>
                    <!-- The container for the uploaded files -->
                    <div id="files" class="files"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
        $(document).ready(function() {
            wireImageUpload();
        });

        function wireImageUpload() {
            'use strict';
            // Change this to the location of your server-side upload handler:
            var url = '/file/ajaxupload';
            var uploadButton = $('<button/>');
            $(uploadButton).addClass('btn btn-primary')
                                             .prop('disabled', true)
                                             .text('Processing...')
                                             .on('click', function () {
                                                            alert('uploading');
                                                            var $this = $(this);
                                                            var data = $this.data();
                                                            $this.off('click')
                                                                 .text('Abort')
                                                                 .on('click', function () {
                                                                    $this.remove();
                                                                    data.abort();
                                                                });
                                                            data.submit().always(function () {
                                                                $this.remove();
                                                            });
                                                });

            var tempid = HobbyClue.General.guid();
            $('#fileupload').fileupload({
                url: url,
                paramName: "files",
                formData: { tempid: tempid },
                autoUpload: true,
                acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                maxFileSize: 5000000, // 5 MB
                // Enable image resizing, except for Android and Opera,
                // which actually support image resizing, but fail to
                // send Blob objects via XHR requests:
                disableImageResize: /Android(?!.*Chrome)|Opera/
                    .test(window.navigator.userAgent),
                previewMaxWidth: 100,
                previewMaxHeight: 100,
                previewCrop: true
            }).on('fileuploadadd', function (e, data) {
                data.context = $('<div/>').appendTo('#files');
                $.each(data.files, function (index, file) {
                    var node = $('<p/>').append($('<span/>').text(file.name));
                    if (!index) {
                        node.append('<br>');
                    }
                    node.appendTo(data.context);
                });
            }).on('fileuploadprocessalways', function (e, data) {
                var index = data.index,
                    file = data.files[index],
                    node = $(data.context.children()[index]);
                if (file.preview) {
                    node
                        .prepend('<br>')
                        .prepend(file.preview);
                }
                if (file.error) {
                    node
                        .append('<br>')
                        .append($('<span class="text-danger"/>').text(file.error));
                }
            }).on('fileuploadprogressall', function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#progress .progress-bar').css(
                    'width',
                    progress + '%'
                );
            })
            .on('fileuploaddone', function (e, data) {
            }).on('fileuploadfail', function (e, data) {
                $.each(data.files, function (index) {
                    var error = $('<span class="text-danger"/>').text('File upload failed.');
                    $(data.context.children()[index])
                        .append('<br>')
                        .append(error);
                });
            }).on('fileuploadstop', function (e, data) {
                window.location.replace("/event/create?eventId=" + tempid);
            })
                .prop('disabled', !$.support.fileInput)
                .parent().addClass($.support.fileInput ? undefined : 'disabled');
        }

</script>